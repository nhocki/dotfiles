if [ -e "$HOME/.functions/z.sh" ]; then
  . "$HOME/.functions/z.sh"
  function precmd () {
    _z --add "$(pwd -P)"
  }
fi

function rs {
  if [ -e bin/rails ]; then
    bin/rails server $@
  elif [ -e script/rails ]; then
    script/rails server $@
  else
    script/server $@
  fi
}

function rc {
  if [ -e script/rails ]; then
    script/rails console $@
  elif [ -e bin/rails ]; then
    bin/rails console $@
  else
    script/console $@
  fi
}

function rg {
  if [ -e script/rails ]; then
    script/rails generate $@
  elif [ -e bin/rails ]; then
    bin/rails generate $@
  else
    script/generate $@
  fi
}

function rake {
  if [ -e bin/rake ]; then
    bin/rake $@
  elif [ -e Gemfile ]; then
    bundle exec rake $@
  else
    command rake $@
  fi
}

function oldpr() {
  ref=$(git symbolic-ref HEAD 2> /dev/null)
  if [[ -n $ref ]]; then
    echo `git pull-request -h $1:${ref#refs/heads/}`
  fi
}

use () {
  if [[ $1 == "mac" ]]; then
    unset DOCKER_TLS_VERIFY
    unset DOCKER_CERT_PATH
    unset DOCKER_MACHINE_NAME
    unset DOCKER_HOST
  else
    eval "$(docker-machine env $1)"
  fi
}

dmip () {
  active=`docker-machine active`
  docker-machine ip ${1:-$active}
}

aws-describe-instances() {
  aws-vault exec splice -- aws ec2 describe-instances --output table \
    --filters "Name=tag:Env,Values=$1" "Name=tag:Name,Values=$2" \
    --query "{\"$2 - $1\":Reservations[*].Instances[*].{InstanceID:InstanceId,PrivateIP:PrivateIpAddress,Status:State.Name}}"
}

ec2-staging() { aws-describe-instances staging ${1:-hybrid api} }
ec2-production() { aws-describe-instances production ${1:-hybrid api} }
ec2() { aws-describe-instances "*" ${1:-hybrid api} }

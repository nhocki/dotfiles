if [ -e "$HOME/.functions/giftwitter" ]; then
  source "$HOME/.functions/giftwitter"
fi

if [ -e "$HOME/.functions/z.sh" ]; then
  . "$HOME/.functions/z.sh"
  function precmd () {
    _z --add "$(pwd -P)"
  }
fi

function rs {
  if [ -e bin/rails ]; then
    bin/rails server $@
  elif [ -e script/rails ]; then
    script/rails server $@
  else
    script/server $@
  fi
}

function rc {
  if [ -e script/rails ]; then
    script/rails console $@
  elif [ -e bin/rails ]; then
    bin/rails console $@
  else
    script/console $@
  fi
}

function rg {
  if [ -e script/rails ]; then
    script/rails generate $@
  elif [ -e bin/rails ]; then
    bin/rails generate $@
  else
    script/generate $@
  fi
}

function rake {
  if [ -e bin/rake ]; then
    bin/rake $@
  elif [ -e Gemfile ]; then
    bundle exec rake $@
  else
    command rake $@
  fi
}

aws-describe-instances() {
  aws-vault exec splice -- aws ec2 describe-instances --output table --filters "Name=tag:Env,Values=$1" "Name=tag:Name,Values=$2" --query "{\"$2 - $1\":Reservations[*].Instances[*].{InstanceID:InstanceId,PrivateIP:PrivateIpAddress,NameTag:Tags[?Key==\`NodeName\`]|[0].Value,Status:State.Name}}"
}

ec2-staging() { aws-describe-instances staging "${1:-hybrid api}"; }
ec2-production() { aws-describe-instances production "${1:-hybrid api}"; }
ec2() { aws-describe-instances "*" "${1:-hybrid api}"; }

gitbranch() {
  if [ "$(git branch | grep -c master)" -eq 1 ] ; then
    echo "master"
  elif [ "$(git branch | grep -c main)" -ge 1 ]; then
    echo "main"
  else
    echo "staging"
  fi
}


gclean() {
  local branch;
  branch=$(gitbranch)
  echo "Cleaning branches merged against: $branch"
  git branch --merge "$branch" | grep -v "$branch" | grep -v "*" | xargs git branch -d
}
